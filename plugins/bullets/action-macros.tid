title: $:/plugins/sq/bullets/action-macros

\whitespace trim

\define save-edit-bullet-actions()
<!-- handle saving a bullet being edited -->
<!-- XXX draft -->
<$action-deletetiddler $tiddler=<<row-edit-state>> />
\end

\define indent-bullet-actions()
<!-- handle indenting a bullet -->
<$set name="old-parent-bullets" filter="[{!!parent}get[stream-list]]" select="0">
<$set name="previous-bullet" filter="[enlist<old-parent-bullets>is[tiddler]before<currentTiddler>]" select="0">
<$list filter="[<previous-bullet>minlength[1]]" variable="_NULL">
	<$action-listops $tiddler=<<previous-bullet>> $field="stream-list" $subfilter="+[is[tiddler]] [<currentTiddler>]"/>
	<$action-listops $tiddler={{!!parent}} $field="stream-list" $subfilter="+[is[tiddler]] -[<currentTiddler>]"/>
	<$action-setfield $tiddler=<<currentTiddler>> parent=<<previous-bullet>> />
</$list>
</$set>
</$set>
\end


\define unindent-bullet-actions()
<!-- handle unindenting a bullet -->
<$set name="new-parent" filter="[{!!parent}get[parent]]" select="0">
<$set name="new-parent-bullets" filter="[<new-parent>get[stream-list]]" select="0">
<$set name="new-next-bullet" filter="[enlist<new-parent-bullets>is[tiddler]after{!!parent}]" select="0">
<$list filter="[<new-parent>minlength[1]]" variable="_NULL">
	<$action-listops $tiddler=<<new-parent>> $field="stream-list" $subfilter="+[is[tiddler]] +[insertbefore:new-next-bullet<currentTiddler>]"/>
	<$action-listops $tiddler={{!!parent}} $field="stream-list" $subfilter="+[is[tiddler]] -[<currentTiddler>]"/>
	<$action-setfield $tiddler=<<currentTiddler>> parent=<<new-parent>> />
</$list>
</$set>
</$set>
</$set>
\end


\define demote-bullet-actions()
<$set name="parent-bullets" filter="[{!!parent}get[stream-list]]" select="0">
	<$list filter="[enlist<parent-bullets>after<currentTiddler>]" variable="next-bullet">
		<$action-listops $tiddler={{!!parent}} $field="stream-list" $subfilter="+[insertbefore:currentTiddler<next-bullet>]"/>
	</$list>
</$set>
\end


\define promote-bullet-actions()
<$set name="parent-bullets" filter="[{!!parent}get[stream-list]]" select="0">
	<$list filter="[enlist<parent-bullets>before<currentTiddler>]" variable="previous-bullet">
		<$action-listops $tiddler={{!!parent}} $field="stream-list" $subfilter="+[insertbefore:previous-bullet<currentTiddler>]"/>
	</$list>
</$set>
\end


\define save-bullet-actions()
<$action-withselection actions="""
<$list filter="[<currentTiddler>get[text]length[]subtract<selectionEnd>!match[0]]" variable="_NULL" emptyMessage=<<add-bullet-actions>>>
	<$macrocall $name="add-bullet-actions" startText={{{[<currentTiddler>get[text]split[]rest<selectionEnd>join[]]}}} />
	<$action-setfield $tiddler=<<currentTiddler>> text={{{[<currentTiddler>get[text]split[]first<selectionEnd>join[]]}}}/>
</$list>
"""/>
\end


\define add-bullet-actions(startText:"")
<!-- handle saving a bullet edit and creating a new subsequent bullet -->
<$set name="parent" filter="[<currentTiddler>match<bullet-root-title>] ~[{!!parent}] +[first[]]" select="0">
<$wikify name="new-bullet" text={{$:/config/sq/bullets/new-bullet-title}}>
	<$action-createtiddler $basetitle=<<new-bullet>> text="$startText$" $template={{$:/config/sq/bullets/new-bullet-tiddler-template}} parent=<<parent>> stream-type="default"/>
	<$set name="parent-bullets" filter="[<parent>get[stream-list]]" select="0">
	<$set name="next-bullet" filter="[enlist<parent-bullets>is[tiddler]after<currentTiddler>]" select="0">
	<$action-listops $tiddler=<<parent>> $field="stream-list" $subfilter="+[is[tiddler]] +[insertbefore:next-bullet<new-bullet>]"/>
	<$list filter="[<parent>!has[stream-type]]" variable="_NULL">
		<$action-setfield $tiddler=<<parent>> stream-type="default"/>
	</$list>
	</$set>
	</$set>
	<$action-setfield $tiddler=<<row-edit-state>> text=<<new-bullet>>/>
</$wikify>
</$set>
\end


\define save-longform-actions()
<!-- handle multiple bullets entered at once -->
<$list filter="[{!!text}splitregexp{$:/config/sq/bullets/bullet-split-regexp}rest[]]" variable="fragment">
	<$macrocall $name="add-bullet-actions" startText=<<fragment>> />
</$list>
<$action-setfield $tiddler=<<currentTiddler>> text={{{[{!!text}splitregexp{$:/config/sq/bullets/bullet-split-regexp}first[]]}}}/>
<<add-bullet-actions>>
\end


\define cancel-edit-bullet-actions()
<!-- handle cancelling the edit on an empty bullet -->
<$list filter="[<currentTiddler>!has[stream-list]!has[text]]" variable="_NULL">
	<$action-listops $tiddler={{{[{!!parent}]}}} $field="stream-list" $subfilter="+[is[tiddler]] -[<currentTiddler>]"/>
	<$action-deletetiddler $tiddler=<<currentTiddler>> />
</$list>
<$action-deletetiddler $tiddler=<<row-edit-state>> />
\end


\define remove-empty-bullet-actions()
<!-- handle backspace on an empty bullet -->
<<cancel-edit-bullet-actions>>
<<focus-higher-bullet-actions>>
\end


\define delete-bullet-actions()
<$action-ifconfirmed  $message="Do you wish to delete this tiddler?">
	<$transclude tiddler="$:/plugins/sq/bullets/delete-hook/actions"/>
	<$action-deletetiddler $tiddler=<<currentTiddler>> />
	<$list filter="[<row-edit-state>get[text]match<currentTiddler>]">
		<<focus-higher-bullet-actions>>
	</$list>
</$action-ifconfirmed>
\end


\define rename-bullet-actions()
<$action-withinput message="Rename this tiddler?" default=<<currentTiddler>> actions="""
	<$action-sendmessage $message="tm-rename-tiddler" from=<<currentTiddler>> to=<<userInput>>/>
	<$list filter="[<row-edit-state>match<currentTiddler>]" variable="_NULL">
		<$action-setfield $tiddler=<<row-edit-state>> text=<<userInput>>/>
	</$list>
"""/>
\end


\define find-last-child()
<!-- used by focus-higher-bullet-actions macro -->
<$list filter="[enlist{!!stream-list}is[tiddler]last[]]" emptyMessage="""<$action-setfield $tiddler=<<row-edit-state>> text=<<currentTiddler>>/>""">
	<$macrocall $name="find-last-child"/>
</$list>
\end


\define focus-higher-bullet-actions()
<!-- handles moving up in the bullets with the keyboard -->
<$set name="old-parent" value={{!!parent}} select="0">
<$set name="old-parent-bullets" filter="[<old-parent>get[stream-list]]" select="0">
<$set name="old-active-bullet" value=<<currentTiddler>> >
<$list filter="[enlist<old-parent-bullets>is[tiddler]before<currentTiddler>]" emptyMessage="""<$list filter="[<old-parent>!match<bullet-root-title>]"><$action-setfield $tiddler=<<row-edit-state>> text=<<old-parent>> /></$list>""">
	<$macrocall $name="find-last-child"/>
</$list>
</$set>
</$set>
</$set>
\end


\define find-next-downwards-bullet()
<!-- used by focus-lower-bullet-actions macro -->
<$list filter="[<currentTiddler>has[parent]]" variable="_NULL">
<$set name="old-parent" value={{!!parent}} select="0">
<$set name="old-parent-bullets" filter="[<old-parent>get[stream-list]]" select="0">
<$list filter="[enlist<old-parent-bullets>is[tiddler]after<currentTiddler>]" emptyMessage="""<$set name="currentTiddler" value=<<old-parent>>><<find-next-downwards-bullet>></$set>""">
	<$action-setfield $tiddler=<<row-edit-state>> text=<<currentTiddler>>/>	
</$list>
</$set>
</$set>
</$list>
\end


\define focus-lower-bullet-actions()
<!-- handles moving down in the bullets with the keyboard -->
<!--if children, get the first child-->
<$list filter="[<currentTiddler>has[stream-list]]" variable="_NULL">
	<$set name="next-bullet" filter="[enlist{!!stream-list}is[tiddler]first[]]">
		<$action-setfield $tiddler=<<row-edit-state>> text=<<next-bullet>> />
	</$set>
</$list>
<!-- if no children-->
<!--- get closest ancestor with next sibling -->
<$list filter="[<currentTiddler>!has[stream-list]]" variable="_NULL">
	<$set name="old-active-bullet" value=<<currentTiddler>> >
		<<find-next-downwards-bullet>>
	</$set>
</$list>
\end


\define bullet-drag-start-actions()
<!-- parameter to draggable widget -->
<$action-setfield $tiddler=<<drag-title-state>> text=<<currentTiddler>>/>
<$action-setfield $tiddler="$:/state/sq/bullets/global-drag-state" text="yes"/>
<$set name="siblings" filter="[{!!parent}get[stream-list]]" select="0">
<$list filter="[enlist<siblings>after<currentTiddler>]" variable="next-bullet">
	<$action-setfield $tiddler=<<drag-title-nextsibling-state>> text=<<next-bullet>> />
</$set>
\end


\define bullet-drag-end-actions()
<!-- parameter to draggable widget -->
<$action-deletetiddler $filter="""[<drag-title-state>][<drag-title-nextsibling-state>][[$:/state/sq/bullets/global-drag-state]]""" />
\end


\define list-bullets-draggable-drop-actions()
<!-- handles drag and drop -->
<$set name="parent" value=<<dropTargetTiddler>>>
<!-- if target has no stream-type, assign one -->
<$list filter="[<dropTargetTiddler>!has[stream-type]]">
	<$action-setfield $tiddler=<<dropTargetTiddler>> stream-type="default"/>
</$list>
<!-- if action tiddler has no stream-type, assign one -->
<$list filter="[<actionTiddler>!has[stream-type]]" variable="_NULL">
	<$action-setfield $tiddler=<<actionTiddler>> stream-type="default" />
</$list>
<!-- if we are dropping onto a new parent, then we might need to handle modifier keys -->
<$list filter="[<actionTiddler>get[parent]!match<parent>]" variable="_NULL">
	<$wikify name="new-bullet" text={{$:/config/sq/bullets/new-bullet-title}}>
		<!-- ctrl modifier key on drop event -->
		<!-- create a new bullet with text of dropped bullet -->
		<$list filter="[<modifier>match[ctrl]]" variable="_NULL">
			<$action-createtiddler $basetitle=<<new-bullet>> text={{{ [<actionTiddler>get[text]] }}} parent=<<parent>> stream-type="default"/>
		</$list>
		<!-- shift modifier key on drop event -->
		<$list filter="[<modifier>match[shift]]" variable="_NULL">
			<!-- create new bullet on target, in correct position, text is a transclusion-->
			<$action-createtiddler $basetitle=<<new-bullet>> text={{{ [<actionTiddler>addprefix[{{]addsuffix[}}]] }}} parent=<<parent>> stream-type="default"/>
		</$list>
		<!-- insert into correct position on new parent -->			
		<$action-listops $tiddler=<<dropTargetTiddler>> $field="stream-list" $subfilter="+[insertbefore:currentTiddler<new-bullet>]"/>
	</$wikify>
	<!-- no modifier key on drop event -->
	<!-- insert in correct position on new parent, and remove from old parent -->
	<!-- assign new parent -->
	<$list filter="[<modifier>match[normal]]" variable="_NULL">
		<$action-listops $tiddler=<<dropTargetTiddler>> $field="stream-list" $subfilter="+[insertbefore:currentTiddler<actionTiddler>]"/>
		<$set name="original-parent" filter="[<actionTiddler>get[parent]]">
			<$action-listops $tiddler=<<original-parent>> $field="stream-list" $subfilter="-[<actionTiddler>]"/>
		</$set>
		<$action-setfield $tiddler=<<actionTiddler>> parent=<<parent>>/>
	</$list>
</$list>
<!-- we are dropping on to the same parent, insert in the correct position -->
<$list filter="[<actionTiddler>get[parent]match<parent>]" variable="_NULL">
	<$action-listops $tiddler=<<dropTargetTiddler>> $field="stream-list" $subfilter="+[insertbefore:currentTiddler<actionTiddler>]"/>
</$list>
</$set>
\end